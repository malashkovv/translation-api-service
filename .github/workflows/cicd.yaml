name: Tests

on:
  pull_request:
  push:
    branches:
      - 'master'
      - 'develop'
  release:
    types:
      - 'created'

jobs:
  test-api:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]
        python-version: ["3.7.x", "3.8.x", "3.9.x"]

    env:
      PYTHON_VERSION: ${{ matrix.python-version }}

    steps:
      - name: Checkout source
        uses: actions/checkout@v2
        with:
          fetch-depth: 0  # Needed by codecov.io

      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install test suite
        run: pip install -r cicd/test_requirements.txt

      - name: Install app packages
        run: pip install -r translation-api/requirements.txt

      - name: Run tests
        run: py.test --cov=translation-api --cov-report=xml translation-api/tests/

      - name: Send coverage report
        uses: codecov/codecov-action@v1
        with:
          files: ./coverage.xml

  lint:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: ["ubuntu-latest"]

    steps:
      - name: Checkout source
        uses: actions/checkout@v2

      - name: Set up Python
        uses: actions/setup-python@v2

      - name: Install linter suite
        run: pip install -r cicd/lint_requirements.txt

      - name: Run flake8
        run: flake8 translation-api/
  release-api-docker:
    runs-on: "ubuntu-latest"
    needs:
      - test-api
      - lint
    if: github.event_name == 'release' && github.event.action == 'created'
    steps:
      - uses: actions/checkout@v2

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: Set output
        id: vars
        run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}

      - name: Build API image
        run: |
          docker build \
            -f translation-api-perf/Dockerfile \
            -t vmalashkov/translation-api:${{ steps.vars.outputs.tag }} .
      - name: Push API image
        run: |
          docker push vmalashkov/translation-api:${{ steps.vars.outputs.tag }}

